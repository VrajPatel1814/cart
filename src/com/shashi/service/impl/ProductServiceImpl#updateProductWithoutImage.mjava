@Override
public
String
updateProductWithoutImage
(
String
prevProductId
,
ProductBean
updatedProduct
)
{
String
status="Product
Updation
Failed!"
;
if
(
!prevProductId
.
equals
(
updatedProduct
.
getProdId
(
)
)
)
{
status="Both
Products
are
Different
,
Updation
Failed!"
;
return
status
;
}
int
prevQuantity=new
ProductServiceImpl
(
)
.
getProductQuantity
(
prevProductId
)
;
Connection
con=DBUtil
.
provideConnection
(
)
;
PreparedStatement
ps=null
;
try
{
ps=con
.
prepareStatement
(
"update
product
set
pname=?
,
ptype=?
,
pinfo=?
,
pprice=?
,
pquantity=?
where
pid=?"
)
;
ps
.
setString
(
1
,
updatedProduct
.
getProdName
(
)
)
;
ps
.
setString
(
2
,
updatedProduct
.
getProdType
(
)
)
;
ps
.
setString
(
3
,
updatedProduct
.
getProdInfo
(
)
)
;
ps
.
setDouble
(
4
,
updatedProduct
.
getProdPrice
(
)
)
;
ps
.
setInt
(
5
,
updatedProduct
.
getProdQuantity
(
)
)
;
ps
.
setString
(
6
,
prevProductId
)
;
int
k=ps
.
executeUpdate
(
)
;
if
(
(
k
>
0
)
&&
(
prevQuantity
<
updatedProduct
.
getProdQuantity
(
)
)
)
{
status="Product
Updated
Successfully!"
;
List<DemandBean>
demandList=new
DemandServiceImpl
(
)
.
haveDemanded
(
prevProductId
)
;
for
(
DemandBean
demand
:
demandList
)
{
String
userFName=new
UserServiceImpl
(
)
.
getFName
(
demand
.
getUserName
(
)
)
;
try
{
MailMessage
.
productAvailableNow
(
demand
.
getUserName
(
)
,
userFName
,
updatedProduct
.
getProdName
(
)
,
prevProductId
)
;
}
catch
(
Exception
e
)
{
System
.
out
.
println
(
"Mail
Sending
Failed:
"
+
e
.
getMessage
(
)
)
;
}
boolean
flag=new
DemandServiceImpl
(
)
.
removeProduct
(
demand
.
getUserName
(
)
,
prevProductId
)
;
if
(
flag
)
status+="
And
Mail
Send
to
the
customers
who
were
waiting
for
this
product!"
;
}
}
else
if
(
k
>
0
)
status="Product
Updated
Successfully!"
;
else
status="Product
Not
available
in
the
store!"
;
}
catch
(
SQLException
e
)
{
e
.
printStackTrace
(
)
;
}
DBUtil
.
closeConnection
(
con
)
;
DBUtil
.
closeConnection
(
ps
)
;
return
status
;
}
